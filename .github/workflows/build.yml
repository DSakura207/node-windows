name: Docker Image CI

on:
  push:
    branches: [ "gitaction" ]

jobs:
  update_nodejs_releases:
    name: Update Node.js releases
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Update Node.js release schedule and version list
        shell: pwsh
        env:
          NODE_RELEASE_SCHEDULE: https://raw.githubusercontent.com/nodejs/Release/main/schedule.json
          NODE_RELEASE_VERSION: https://nodejs.org/download/release/index.json
        run: >
          $proceedNextJob = $false
          Invoke-WebRequest -Uri 'https://raw.githubusercontent.com/nodejs/Release/main/schedule.json' -UseBasicParsing -OutFile ./schedule.new.json
          Invoke-WebRequest -Uri 'https://nodejs.org/download/release/index.json' -UseBasicParsing -OutFile ./index.new.json
          $oldScheduleHash = (Get-FileHash -Path ./schedule.json -Algorithm SHA256).Hash
          $newScheduleHash = (Get-FileHash -Path ./schedule.new.json -Algorithm SHA256).Hash
          $oldReleaseHash = (Get-FileHash -Path ./index.json -Algorithm SHA256).Hash
          $newReleaseHash = (Get-FileHash -Path ./index.new.json -Algorithm SHA256).Hash
          if ($oldScheduleHash -ne $newScheduleHash)
          {
            Remove-Item ./schedule.json -Force
            Rename-Item ./schedule.new.json schedule.json
            $proceedNextJob = $true
          }
          if ($oldReleaseHash -ne $newReleaseHash)
          {
            Remove-Item ./index.json -Force
            Rename-Item ./index.new.json index.json
            $proceedNextJob = $true
          }
          if ($proceedNextJob) {
            Exit 0
          } else {
            Exit 1
          }
  build_and_publish_docker_image:
    needs: update_nodejs_releases
    name: Build and publish node-windows image
    strategy:
      matrix:
        os: [ windows-2022, windows-2019 ]
        repo: [ mcr.microsoft.com/windows/servercore, mcr.microsoft.com/dotnet/framework/sdk ]
        node_version: [ current, lts, maintenance]
        include:
          - tag: ltsc2022
            os: windows-2022
            repo: mcr.microsoft.com/windows/servercore
          - tag: 4.8-windowsservercore-ltsc2022
            os: windows-2022
            repo: mcr.microsoft.com/dotnet/framework/sdk
          - tag: ltsc2019
            os: windows-2019
            repo: mcr.microsoft.com/windows/servercore
          - tag: 4.8-windowsservercore-ltsc2019
            os: windows-2019
            repo: mcr.microsoft.com/dotnet/framework/sdk
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: State build target
        run: >
          Write-Host "Build node-windows, base image ${{ matrix.repo }}:${{ matrix.tag }}, node.js: ${{ matrix.node_version }}"
      - name: Get Node.js release schedule
        run: >
          Invoke-WebRequest -Uri 'https://raw.githubusercontent.com/nodejs/Release/main/schedule.json' -UseBasicParsing -OutFile schedule.json
      - name: Get Node.js release list
        run: >
          Invoke-WebRequest -Uri 'https://nodejs.org/download/release/index.json' -UseBasicParsing -OutFile index.json
      - name: Build and tag Docker images
        run: >
          .\Build.ps1
        env:
          BASE_IMAGE_NAME: ${{matrix.repo}}
          BASE_IMAGE_TAG: ${{matrix.tag}}
          NODE_VERSION: ${{matrix.node_version}}
      